# baseURI: http://metromap.politie.org/importer_archimate
# imports: http://topbraid.org/sparqlmotionfunctions
# imports: http://topbraid.org/sparqlmotionlib-tb
# prefix: importer

@prefix importer: <http://metromap.politie.org/importer_archimate#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sm: <http://topbraid.org/sparqlmotion#> .
@prefix sml: <http://topbraid.org/sparqlmotionlib#> .
@prefix sp: <http://spinrdf.org/sp#> .
@prefix spin: <http://spinrdf.org/spin#> .
@prefix spl: <http://spinrdf.org/spl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

<http://metromap.politie.org/importer_archimate>
  a owl:Ontology ;
  owl:imports <http://topbraid.org/sparqlmotionfunctions> ;
  owl:imports <http://topbraid.org/sparqlmotionlib-tb> ;
  owl:versionInfo "Created with TopBraid Composer" ;
.
importer:BindLiteralVariable_1
  a sml:BindLiteralVariable ;
  sm:next importer:importXMLFromUrl_Return ;
  sm:nodeX 322 ;
  sm:nodeY 417 ;
  sm:outputVariable "doc" ;
  sml:datatype xsd:string ;
  sml:template "{?xml}" ;
  rdfs:label "Bind literal variable 1" ;
.
importer:ImportXMLFromURL_1
  a sml:ImportXMLFromURL ;
  sm:next importer:BindLiteralVariable_1 ;
  sm:nodeX 127 ;
  sm:nodeY 225 ;
  sm:outputVariable "xml" ;
  sml:ignoreDoctype false ;
  sml:url "{?url}" ;
  rdfs:label "Import XMLFrom URL 1" ;
.
importer:importXMLFromUrl
  a sm:Function ;
  spin:constraint [
      a spl:Argument ;
      spl:defaultValue "https://gist.githubusercontent.com/btotr/4268e3c034ef0423dadb9e79655acaad/raw/c6b8dce44c479a763bc6975d96bd2551e4f4e85e/archimate-example" ;
      spl:optional false ;
      spl:predicate <http://spinrdf.org/arg#url> ;
      spl:valueType xsd:string ;
      sm:next importer:ImportXMLFromURL_1 ;
      sm:nodeX 73 ;
      sm:nodeY 33 ;
      sml:hidden true ;
    ] ;
  sm:returnModule importer:importXMLFromUrl_Return ;
  rdfs:subClassOf sm:Functions ;
.
importer:importXMLFromUrl_1
  a importer:importXMLFromUrl ;
  sm:outputVariable "result" ;
  rdfs:label "import XMLFrom url 1" ;
.
importer:importXMLFromUrl_Return
  a sml:ReturnNode ;
  sm:nodeX 230 ;
  sm:nodeY 601 ;
  sml:result [
      sp:varName "doc" ;
    ] ;
.
