# baseURI: http://metromap.politie.nl/service
# imports: http://topbraid.org/sparqlmotionlib
# imports: http://uispin.org/swon
# prefix: endpoint

@prefix arg: <http://spinrdf.org/arg#> .
@prefix dbp: <http://dbpedia.org/property/> .
@prefix dbpo: <http://dbpedia.org/ontology/> .
@prefix endpoint: <http://metromap.politie.nl/service#> .
@prefix m: <http://metro.politie.nl/#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sam: <http://simplearchimatemodel.politie.nl/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix sm: <http://topbraid.org/sparqlmotion#> .
@prefix smf: <http://topbraid.org/sparqlmotionfunctions#> .
@prefix sml: <http://topbraid.org/sparqlmotionlib#> .
@prefix sp: <http://spinrdf.org/sp#> .
@prefix spin: <http://spinrdf.org/spin#> .
@prefix spl: <http://spinrdf.org/spl#> .
@prefix swon: <http://uispin.org/swon#> .
@prefix ui: <http://uispin.org/ui#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

<http://metromap.politie.nl/service>
  a owl:Ontology ;
  owl:imports <http://topbraid.org/sparqlmotionlib> ;
  owl:imports <http://uispin.org/swon> ;
  owl:versionInfo "simple example for sparqlMotion" ;
.
endpoint:ApplyTopSPIN_1
  a sml:ApplyTopSPIN ;
  sm:next endpoint:ReturnSWPDocument_1 ;
  sm:nodeX 319 ;
  sm:nodeY 493 ;
  sml:flatten false ;
  sml:predicate spin:rule ;
  sml:replace false ;
  sml:singlePass false ;
  rdfs:label "Apply top SPIN 1" ;
.
endpoint:ImportRDFFromWorkspace_1
  a sml:ImportRDFFromWorkspace ;
  sm:next endpoint:ApplyTopSPIN_1 ;
  sm:nodeX 297 ;
  sm:nodeY 341 ;
  sml:ignoreImports false ;
  sml:sourceFilePath "generate-metromap.ttl" ;
  rdfs:label "Import RDFFrom workspace 1" ;
.
endpoint:ReturnSWPDocument_1
  a sml:ReturnSWPDocument ;
  sm:nodeX 314 ;
  sm:nodeY 706 ;
  sml:snippet true ;
  sml:view [
      a swon:Object ;
      ui:child [
          a swon:Value ;
          arg:name "debug" ;
          arg:value [
              sp:varName "debug" ;
            ] ;
          ui:childIndex 0 ;
        ] ;
      ui:child [
          a swon:Values ;
          arg:name "metromap" ;
          ui:child [
              a ui:forEach ;
              ui:child [
                  a swon:Object ;
                  ui:child [
                      a swon:Value ;
                      arg:name "data" ;
                      ui:child [
                          a swon:Value ;
                          arg:name "color" ;
                          arg:value [
                              a ui:label ;
                              sp:arg1 [
                                  sp:varName "color" ;
                                ] ;
                            ] ;
                          ui:childIndex 2 ;
                        ] ;
                      ui:child [
                          a swon:Value ;
                          arg:name "documentation" ;
                          arg:value [
                              a ui:label ;
                              sp:arg1 [
                                  sp:varName "documentation" ;
                                ] ;
                            ] ;
                          ui:childIndex 4 ;
                        ] ;
                      ui:child [
                          a swon:Value ;
                          arg:name "id" ;
                          arg:value [
                              a ui:label ;
                              sp:arg1 [
                                  sp:varName "id" ;
                                ] ;
                            ] ;
                          ui:childIndex 1 ;
                        ] ;
                      ui:child [
                          a swon:Value ;
                          arg:name "version" ;
                          arg:value [
                              a ui:label ;
                              sp:arg1 [
                                  sp:varName "version" ;
                                ] ;
                            ] ;
                          ui:childIndex 3 ;
                        ] ;
                      ui:child [
                          a ui:TextNode ;
                          ui:childIndex 0 ;
                          ui:text "{" ;
                        ] ;
                      ui:child [
                          a ui:TextNode ;
                          ui:childIndex 7 ;
                          ui:text """}
""" ;
                        ] ;
                      ui:child [
                          a ui:else ;
                          ui:child [
                              a swon:Value ;
                              arg:name "source" ;
                              arg:value [
                                  a ui:label ;
                                  sp:arg1 [
                                      sp:varName "source" ;
                                    ] ;
                                ] ;
                              ui:childIndex 0 ;
                            ] ;
                          ui:child [
                              a swon:Value ;
                              arg:name "target" ;
                              arg:value [
                                  a ui:label ;
                                  sp:arg1 [
                                      sp:varName "target" ;
                                    ] ;
                                ] ;
                              ui:childIndex 1 ;
                            ] ;
                          ui:childIndex 6 ;
                        ] ;
                      ui:child [
                          a ui:if ;
                          ui:child [
                              a swon:Value ;
                              arg:name "bar" ;
                              arg:value 0 ;
                              ui:childIndex 1 ;
                            ] ;
                          ui:child [
                              a swon:Value ;
                              arg:name "bax" ;
                              arg:value 0 ;
                              ui:childIndex 3 ;
                            ] ;
                          ui:child [
                              a swon:Value ;
                              arg:name "baz" ;
                              arg:value 0 ;
                              ui:childIndex 2 ;
                            ] ;
                          ui:child [
                              a swon:Value ;
                              arg:name "foo" ;
                              arg:value 10 ;
                              ui:childIndex 0 ;
                            ] ;
                          ui:childIndex 5 ;
                          ui:condition [
                              a sp:eq ;
                              sp:arg1 [
                                  sp:varName "nodeType" ;
                                ] ;
                              sp:arg2 "nodes" ;
                            ] ;
                        ] ;
                      ui:childIndex 1 ;
                    ] ;
                  ui:child [
                      a swon:Value ;
                      arg:name "group" ;
                      arg:value [
                          a ui:label ;
                          sp:arg1 [
                              sp:varName "nodeType" ;
                            ] ;
                        ] ;
                      ui:childIndex 0 ;
                    ] ;
                  ui:child [
                      a ui:CommentNode ;
                      ui:childIndex 2 ;
                      rdfs:comment """
					{ group: 'nodes', data: { id: 'teruggave beslag', color: 'black',  foo: 10} }
		  			{ group: 'edges', data: { id: 'beheren beslag-goed-bvh', source: 'beheren beslag', target: 'goed', color: 'green' } },
				""" ;
                    ] ;
                  ui:childIndex 0 ;
                ] ;
              ui:childIndex 0 ;
              ui:resultSet [
                  a sp:Select ;
                  sp:resultVariables (
                      [
                        sp:varName "id" ;
                      ]
                      [
                        sp:varName "source" ;
                      ]
                      [
                        sp:varName "target" ;
                      ]
                      [
                        sp:varName "class" ;
                      ]
                      [
                        sp:varName "nodeType" ;
                      ]
                      [
                        sp:varName "color" ;
                      ]
                      [
                        sp:varName "version" ;
                      ]
                      [
                        sp:varName "documentation" ;
                      ]
                    ) ;
                  sp:where (
                      [
                        a sp:Union ;
                        sp:elements (
                            (
                              [
                                sp:object <http://metro.politie.nl#L> ;
                                sp:predicate rdf:type ;
                                sp:subject [
                                    sp:varName "id" ;
                                  ] ;
                              ]
                              [
                                sp:object [
                                    sp:varName "id" ;
                                  ] ;
                                sp:predicate <http://metro.politie.nl#T> ;
                                sp:subject [
                                    sp:varName "source" ;
                                  ] ;
                              ]
                              [
                                sp:object [
                                    sp:varName "target" ;
                                  ] ;
                                sp:predicate <http://metro.politie.nl#T> ;
                                sp:subject [
                                    sp:varName "id" ;
                                  ] ;
                              ]
                              [
                                a sp:TriplePath ;
                                sp:object [
                                    sp:varName "color" ;
                                  ] ;
                                sp:path [
                                    a sp:SeqPath ;
                                    sp:path1 sam:A ;
                                    sp:path2 sam:hasColor ;
                                  ] ;
                                sp:subject [
                                    sp:varName "id" ;
                                  ] ;
                              ]
                              [
                                a sp:Filter ;
                                sp:expression [
                                    a sp:ne ;
                                    sp:arg1 [
                                        sp:varName "source" ;
                                      ] ;
                                    sp:arg2 [
                                        sp:varName "target" ;
                                      ] ;
                                  ] ;
                              ]
                            )
                            (
                              [
                                sp:object <http://metro.politie.nl#S> ;
                                sp:predicate rdf:type ;
                                sp:subject [
                                    sp:varName "id" ;
                                  ] ;
                              ]
                              [
                                a sp:Optional ;
                                sp:elements (
                                    [
                                      sp:object [
                                          sp:varName "version" ;
                                        ] ;
                                      sp:predicate sam:version ;
                                      sp:subject [
                                          sp:varName "id" ;
                                        ] ;
                                    ]
                                  ) ;
                              ]
                              [
                                a sp:Optional ;
                                sp:elements (
                                    [
                                      sp:object [
                                          sp:varName "documentation" ;
                                        ] ;
                                      sp:predicate sam:documentation ;
                                      sp:subject [
                                          sp:varName "id" ;
                                        ] ;
                                    ]
                                  ) ;
                              ]
                              [
                                a sp:Bind ;
                                sp:expression "black" ;
                                sp:variable [
                                    sp:varName "color" ;
                                  ] ;
                              ]
                            )
                          ) ;
                      ]
                      [
                        sp:object [
                            sp:varName "class" ;
                          ] ;
                        sp:predicate rdf:type ;
                        sp:subject [
                            sp:varName "id" ;
                          ] ;
                      ]
                      [
                        sp:object [
                            sp:varName "nodeType" ;
                          ] ;
                        sp:predicate rdfs:label ;
                        sp:subject [
                            sp:varName "class" ;
                          ] ;
                      ]
                      [
                        a sp:Filter ;
                        sp:expression [
                            a sp:or ;
                            sp:arg1 [
                                a sp:eq ;
                                sp:arg1 [
                                    sp:varName "class" ;
                                  ] ;
                                sp:arg2 <http://metro.politie.nl#S> ;
                              ] ;
                            sp:arg2 [
                                a sp:eq ;
                                sp:arg1 [
                                    sp:varName "class" ;
                                  ] ;
                                sp:arg2 <http://metro.politie.nl#L> ;
                              ] ;
                          ] ;
                      ]
                    ) ;
                ] ;
              ui:separator "," ;
            ] ;
          ui:childIndex 1 ;
        ] ;
    ] ;
  rdfs:label "Return SWPDocument 1" ;
.
endpoint:begrippenkader
  a owl:DatatypeProperty ;
  rdfs:label "debug" ;
.
endpoint:metromap
  a spin:Function ;
  spin:constraint [
      a spl:Argument ;
      spl:defaultValue "false" ;
      spl:optional true ;
      spl:predicate endpoint:debug ;
      spl:valueType xsd:string ;
      sm:next endpoint:ImportRDFFromWorkspace_1 ;
      sm:nodeX 178 ;
      sm:nodeY 146 ;
    ] ;
  sm:returnModule endpoint:ReturnSWPDocument_1 ;
  rdfs:comment "http://localhost:8083/tbl/sparqlmotion?id=metromap" ;
  rdfs:comment "the instance name is used as idenifier for the request" ;
  rdfs:label "request" ;
  rdfs:subClassOf sm:Functions ;
.
sam:vastleggen-incident
  sam:R sam:registreren-melding ;
.
