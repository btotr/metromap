# baseURI: http://metromap.politie.org/importXML
# imports: http://metromap.politie.org/importer_archimate
# imports: http://topbraid.org/swa
# imports: http://www.opengroup.org/xsd/archimate/3.0/
# prefix: importXML

@prefix adminguide: <http://server.topbraidlive.org/doc/adminguide#> .
@prefix afn: <http://jena.hpl.hp.com/ARQ/function#> .
@prefix archimate: <http://www.opengroup.org/xsd/archimate/3.0/> .
@prefix arg: <http://spinrdf.org/arg#> .
@prefix cfg: <http://server.topbraidlive.org/web/2009/config#> .
@prefix charts: <http://uispin.org/charts#> .
@prefix composite: <http://www.topbraid.org/2007/05/composite.owl#> .
@prefix css: <http://uispin.org/css#> .
@prefix daml: <http://www.daml.org/2001/03/daml+oil#> .
@prefix dash: <http://datashapes.org/dash#> .
@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix default: <http://uispin.org/default#> .
@prefix dtype: <http://www.linkedmodel.org/schema/dtype#> .
@prefix edg: <http://edg.topbraid.solutions/model/> .
@prefix email: <http://topbraid.org/email#> .
@prefix fn: <http://www.w3.org/2005/xpath-functions#> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix geo: <http://www.w3.org/2003/01/geo/wgs84_pos#> .
@prefix graphql: <http://datashapes.org/graphql#> .
@prefix html: <http://uispin.org/html#> .
@prefix importXML: <http://metromap.politie.org/importXML#> .
@prefix imported: <http://topbraid.org/imported#> .
@prefix importer: <http://metromap.politie.org/importer_archimate#> .
@prefix json: <http://topbraid.org/json#> .
@prefix let: <http://uispin.org/let#> .
@prefix letrs: <http://uispin.org/letrs#> .
@prefix list: <http://jena.hpl.hp.com/ARQ/list#> .
@prefix m: <http://metro.politie.nl#> .
@prefix metadata: <http://topbraid.org/metadata#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix raci: <http://topbraid.org/raci#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sd: <http://www.w3.org/ns/sparql-service-description#> .
@prefix search: <http://topbraid.org/search#> .
@prefix search.spin: <http://topbraid.org/search.spin#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix sioc: <http://rdfs.org/sioc/ns#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix skosapp: <http://evn.topbraidlive.org/uiplugins#> .
@prefix skostemplate: <http://topbraid.org/spin/skostemplates#> .
@prefix skosxl: <http://www.w3.org/2008/05/skos-xl#> .
@prefix sm: <http://topbraid.org/sparqlmotion#> .
@prefix smf: <http://topbraid.org/sparqlmotionfunctions#> .
@prefix sml: <http://topbraid.org/sparqlmotionlib#> .
@prefix solr: <http://topbraid.org/solr#> .
@prefix sp: <http://spinrdf.org/sp#> .
@prefix sparqlmotionlib-swp: <http://topbraid.org/sparqlmotionlib-swp#> .
@prefix sparqlmotionlib-tbc: <http://topbraid.org/sparqlmotionlib-tbc#> .
@prefix spell: <http://topbraid.org/spellcheckresults#> .
@prefix spif: <http://spinrdf.org/spif#> .
@prefix spin: <http://spinrdf.org/spin#> .
@prefix spl: <http://spinrdf.org/spl#> .
@prefix spl-dynamic-ranges: <http://spinrdf.org/spl-dynamic-ranges#> .
@prefix spr: <http://spinrdf.org/spr#> .
@prefix spra: <http://spinrdf.org/spra#> .
@prefix style: <http://uispin.org/style#> .
@prefix svg: <http://uispin.org/svg#> .
@prefix swa: <http://topbraid.org/swa#> .
@prefix swaclasses: <http://topbraid.org/swaclasses#> .
@prefix swaeditor: <http://topbraid.org/swaeditor#> .
@prefix swaowl: <http://topbraid.org/swaowl#> .
@prefix swashacl: <http://topbraid.org/swashacl#> .
@prefix swauml: <http://topbraid.org/swauml#> .
@prefix swon: <http://uispin.org/swon#> .
@prefix sxml: <http://topbraid.org/sxml#> .
@prefix tables: <http://topbraid.org/tables#> .
@prefix task: <http://topbraid.org/task#> .
@prefix tasks: <http://topbraid.org/tasks#> .
@prefix tbl: <http://topbraidlive.org/functions#> .
@prefix teamwork: <http://topbraid.org/teamwork#> .
@prefix tops: <http://www.topbraid.org/tops#> .
@prefix tosh: <http://topbraid.org/tosh#> .
@prefix tosh.ui: <http://topbraid.org/tosh.ui#> .
@prefix ui: <http://uispin.org/ui#> .
@prefix uix: <http://topbraidlive.org/uix#> .
@prefix vaem: <http://www.linkedmodel.org/schema/vaem#> .
@prefix voag: <http://voag.linkedmodel.org/voag#> .
@prefix vs: <http://www.w3.org/2003/06/sw-vocab-status/ns#> .
@prefix wot: <http://xmlns.com/wot/0.1/> .
@prefix xlink: <http://www.w3.org/1999/xlink#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

<http://metromap.politie.org/importXML>
  a owl:Ontology ;
  owl:imports <http://metromap.politie.org/importer_archimate> ;
  owl:imports <http://topbraid.org/swa> ;
  owl:imports archimate: ;
  owl:versionInfo "Created with TopBraid Composer" ;
.
importXML:XMLimport
  a ui:Service ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate arg:graph ;
      spl:valueType xsd:string ;
    ] ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate arg:model ;
    ] ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate arg:source ;
      spl:valueType xsd:string ;
    ] ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate arg:xmlUrl ;
      spl:valueType xsd:string ;
    ] ;
  ui:prototype """
<ui:group let:baseURI=\"http://archimate.politie.nl/instances\" let:graphURI=\"{= IRI(CONCAT(&quot;urn:x-evn-master:&quot;, LCASE(?graph))) }\" let:schemaGraph=\"{= IRI(&quot;http://www.opengroup.org/xsd/archimate/3.0/&quot;) }\" let:targetFilePath=\"/metromap/debug/output.xml\" let:xmlFromURL=\"{= importer:importXMLFromUrl(?model, ?source, ?xmlUrl) }\">
    <ui:debug>
        <ui:dumpScope ui:message=\"import variables\"/>
    </ui:debug>
    <sml:ExportToTextFile sml:replace=\"{= true }\" sml:targetFilePath=\"{= ?targetFilePath }\" sml:text=\"{= ?xmlFromURL }\"/>
    <sml:ImportTextFile sm:outputVariable=\"xml\" sml:sourceFilePath=\"{= ?targetFilePath }\">
        <ui:setContext ui:queryGraph=\"{= ui:graphWithImports(?schemaGraph) }\">
            <sml:ConvertXMLToRDF sml:baseURI=\"{= ?baseURI }\" sml:replace=\"{= true }\" sml:xml=\"{= ?xml }\">
                <ui:update ui:updateQuery=\"{!
                        INSERT {
                            GRAPH ui:tempGraph {
                                ?s ?p ?o .
                            } .
                        }
                        WHERE {
                            ?s ?p ?o .
                        } }\"/>
            </sml:ConvertXMLToRDF>
            <sml:ExportToRDFFile sml:baseURI=\"{= ?baseURI }\" sml:targetFilePath=\"/metromap/debug/output.ttl\"/>
        </ui:setContext>
    </sml:ImportTextFile>
    <ui:dumpGraph ui:filePath=\"/metromap/debug/output.ttl\" ui:graph=\"{= ui:tempGraph }\"/>
    <ui:setContext ui:queryGraph=\"{= ui:graphWithImports(?graphURI) }\">
        <ui:update ui:updateQuery=\"{!
                INSERT {
                    ?s ?p ?o .
                }
                WHERE {
                    GRAPH ui:tempGraph {
                        ?s ?p ?o .
                    } .
                } }\"/>
    </ui:setContext>
    <p>
        <a href=\"swp?_viewClass=ui:client&amp;debug={= ui:label(?graph) }\">open de metromap</a>
    </p>
</ui:group>
"""^^ui:Literal ;
  ui:responseType ui:HTML ;
  rdfs:label "XMLimport" ;
  rdfs:subClassOf ui:Services ;
.
[
  a importer:importXMLFromUrl ;
].
[
  a importer:importXMLFromUrl ;
].
[
  a importer:importXMLFromUrl ;
].
[
  a ui:group ;
].
[
  a ui:group ;
].
[
  a ui:group ;
].
[
  sp:varName "xmlURL" ;
].
[
  sp:varName "xmlURL" ;
].
[
  sp:varName "xmlURL" ;
].
